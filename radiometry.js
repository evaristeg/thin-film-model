var cie1931observer = (function() {
  var data = [
    [375,	0.000000,	0.000000,	0.000000],
    [380,	0.001368,	0.000039,	0.006450],
    [385,	0.002236,	0.000064,	0.010550],
    [390,	0.004243,	0.000120,	0.020050],
    [395,	0.007650,	0.000217,	0.036210],
    [400,	0.014310,	0.000396,	0.067850],
    [405,	0.023190,	0.000640,	0.110200],
    [410,	0.043510,	0.001210,	0.207400],
    [415,	0.077630,	0.002180,	0.371300],
    [420,	0.134380,	0.004000,	0.645600],
    [425,	0.214770,	0.007300,	1.039050],
    [430,	0.283900,	0.011600,	1.385600],
    [435,	0.328500,	0.016840,	1.622960],
    [440,	0.348280,	0.023000,	1.747060],
    [445,	0.348060,	0.029800,	1.782600],
    [450,	0.336200,	0.038000,	1.772110],
    [455,	0.318700,	0.048000,	1.744100],
    [460,	0.290800,	0.060000,	1.669200],
    [465,	0.251100,	0.073900,	1.528100],
    [470,	0.195360,	0.090980,	1.287640],
    [475,	0.142100,	0.112600,	1.041900],
    [480,	0.095640,	0.139020,	0.812950],
    [485,	0.057950,	0.169300,	0.616200],
    [490,	0.032010,	0.208020,	0.465180],
    [495,	0.014700,	0.258600,	0.353300],
    [500,	0.004900,	0.323000,	0.272000],
    [505,	0.002400,	0.407300,	0.212300],
    [510,	0.009300,	0.503000,	0.158200],
    [515,	0.029100,	0.608200,	0.111700],
    [520,	0.063270,	0.710000,	0.078250],
    [525,	0.109600,	0.793200,	0.057250],
    [530,	0.165500,	0.862000,	0.042160],
    [535,	0.225750,	0.914850,	0.029840],
    [540,	0.290400,	0.954000,	0.020300],
    [545,	0.359700,	0.980300,	0.013400],
    [550,	0.433450,	0.994950,	0.008750],
    [555,	0.512050,	1.000000,	0.005750],
    [560,	0.594500,	0.995000,	0.003900],
    [565,	0.678400,	0.978600,	0.002750],
    [570,	0.762100,	0.952000,	0.002100],
    [575,	0.842500,	0.915400,	0.001800],
    [580,	0.916300,	0.870000,	0.001650],
    [585,	0.978600,	0.816300,	0.001400],
    [590,	1.026300,	0.757000,	0.001100],
    [595,	1.056700,	0.694900,	0.001000],
    [600,	1.062200,	0.631000,	0.000800],
    [605,	1.045600,	0.566800,	0.000600],
    [610,	1.002600,	0.503000,	0.000340],
    [615,	0.938400,	0.441200,	0.000240],
    [620,	0.854450,	0.381000,	0.000190],
    [625,	0.751400,	0.321000,	0.000100],
    [630,	0.642400,	0.265000,	0.000050],
    [635,	0.541900,	0.217000,	0.000030],
    [640,	0.447900,	0.175000,	0.000020],
    [645,	0.360800,	0.138200,	0.000010],
    [650,	0.283500,	0.107000,	0.000000],
    [655,	0.218700,	0.081600,	0.000000],
    [660,	0.164900,	0.061000,	0.000000],
    [665,	0.121200,	0.044580,	0.000000],
    [670,	0.087400,	0.032000,	0.000000],
    [675,	0.063600,	0.023200,	0.000000],
    [680,	0.046770,	0.017000,	0.000000],
    [685,	0.032900,	0.011920,	0.000000],
    [690,	0.022700,	0.008210,	0.000000],
    [695,	0.015840,	0.005723,	0.000000],
    [700,	0.011359,	0.004102,	0.000000],
    [705,	0.008111,	0.002929,	0.000000],
    [710,	0.005790,	0.002091,	0.000000],
    [715,	0.004109,	0.001484,	0.000000],
    [720,	0.002899,	0.001047,	0.000000],
    [725,	0.002049,	0.000740,	0.000000],
    [730,	0.001440,	0.000520,	0.000000],
    [735,	0.001000,	0.000361,	0.000000],
    [740,	0.000690,	0.000249,	0.000000],
    [745,	0.000476,	0.000172,	0.000000],
    [750,	0.000332,	0.000120,	0.000000],
    [755,	0.000235,	0.000085,	0.000000],
    [760,	0.000166,	0.000060,	0.000000],
    [765,	0.000117,	0.000042,	0.000000],
    [770,	0.000083,	0.000030,	0.000000],
    [775,	0.000059,	0.000021,	0.000000],
    [780,	0.000042,	0.000015,	0.000000],
    [785,	0.000000,	0.000000,	0.000000],
  ];

  var extractFun = function(col) {
    var samples = [];
    var i;
    for (i = 0; i < data.length; i++) {
      samples.push([data[i][0], data[i][col]]);
    }
    // scale is to put illuminants in more normalized range
    return new PiecewiseLinearFunction(samples).scale(1./80.);
  };

  var x = extractFun(1);
  var y = extractFun(2);
  var z = extractFun(3);

  var spectrumToXyz = function(spectrum) {
    return [
        x.multiply(spectrum).integrate(),
        y.multiply(spectrum).integrate(),
        z.multiply(spectrum).integrate()
      ];
  }

  return { x:x, y:y, z:z, spectrumToXyz:spectrumToXyz };
})();

var illuminants = (function() {
  var normalize = function(spectrum) {
    var c = cie1931observer.spectrumToXyz(spectrum);
    c = colors.XYZ_to_xyY(c);
    c = colors.xyY_clamp_to_srgb_gamut(c);
    c = colors.xyY_to_XYZ(c);
    c = colors.XYZ_to_srgb_linear(c);
    var scale = 0.;
    var i;
    for (i = 0; i < 3; i++) {
      if (c[i] > scale) {
        scale = c[i];
      }
    }
    return spectrum.scale(1. / scale);
  }

  var cieD65 = normalize(new PiecewiseLinearFunction([
      [300,	0.034100],
      [305,	1.664300],
      [310,	3.294500],
      [315,	11.765200],
      [320,	20.236000],
      [325,	28.644700],
      [330,	37.053500],
      [335,	38.501100],
      [340,	39.948800],
      [345,	42.430200],
      [350,	44.911700],
      [355,	45.775000],
      [360,	46.638300],
      [365,	49.363700],
      [370,	52.089100],
      [375,	51.032300],
      [380,	49.975500],
      [385,	52.311800],
      [390,	54.648200],
      [395,	68.701500],
      [400,	82.754900],
      [405,	87.120400],
      [410,	91.486000],
      [415,	92.458900],
      [420,	93.431800],
      [425,	90.057000],
      [430,	86.682300],
      [435,	95.773600],
      [440,	104.865000],
      [445,	110.936000],
      [450,	117.008000],
      [455,	117.410000],
      [460,	117.812000],
      [465,	116.336000],
      [470,	114.861000],
      [475,	115.392000],
      [480,	115.923000],
      [485,	112.367000],
      [490,	108.811000],
      [495,	109.082000],
      [500,	109.354000],
      [505,	108.578000],
      [510,	107.802000],
      [515,	106.296000],
      [520,	104.790000],
      [525,	106.239000],
      [530,	107.689000],
      [535,	106.047000],
      [540,	104.405000],
      [545,	104.225000],
      [550,	104.046000],
      [555,	102.023000],
      [560,	100.000000],
      [565,	98.167100],
      [570,	96.334200],
      [575,	96.061100],
      [580,	95.788000],
      [585,	92.236800],
      [590,	88.685600],
      [595,	89.345900],
      [600,	90.006200],
      [605,	89.802600],
      [610,	89.599100],
      [615,	88.648900],
      [620,	87.698700],
      [625,	85.493600],
      [630,	83.288600],
      [635,	83.493900],
      [640,	83.699200],
      [645,	81.863000],
      [650,	80.026800],
      [655,	80.120700],
      [660,	80.214600],
      [665,	81.246200],
      [670,	82.277800],
      [675,	80.281000],
      [680,	78.284200],
      [685,	74.002700],
      [690,	69.721300],
      [695,	70.665200],
      [700,	71.609100],
      [705,	72.979000],
      [710,	74.349000],
      [715,	67.976500],
      [720,	61.604000],
      [725,	65.744800],
      [730,	69.885600],
      [735,	72.486300],
      [740,	75.087000],
      [745,	69.339800],
      [750,	63.592700],
      [755,	55.005400],
      [760,	46.418200],
      [765,	56.611800],
      [770,	66.805400],
      [775,	65.094100],
      [780,	63.382800],
      [785,	63.843400],
      [790,	64.304000],
      [795,	61.877900],
      [800,	59.451900],
      [805,	55.705400],
      [810,	51.959000],
      [815,	54.699800],
      [820,	57.440600],
      [825,	58.876500],
      [830,	60.312500],
    ]));

  var flat = normalize(new PiecewiseLinearFunction([[350, 1.],[780, 1.]]));

  var blackbody = function(temp) {
    var samples = [];
    var wavelen;
    for (wavelen = 380; wavelen <= 750; wavelen += 5) {
      var intensity = Math.pow(wavelen, -5.) / (Math.exp(14387773. / (wavelen * temp)) - 1.);
      samples.push([1. * wavelen, intensity]);
    }
    return normalize(new PiecewiseLinearFunction(samples));
  }

  return { flat:flat, cieD65:cieD65, blackbody:blackbody };
})();

var getVisibleSpectrum = function(start, end, steps) {
  var color = [];
  var data = [];
  var lo = 0.;
  var hi = 0.;
  var i, j;
  for (i = 0; i <= steps; i++) {
    var wl = start + (end - start) * i / steps;
    var dirac = new PiecewiseLinearFunction([[wl - .1, 0.], [wl, 1.], [wl + .1, 0.]]);
    var c = cie1931observer.spectrumToXyz(dirac);
    c = colors.XYZ_to_xyY(c);
    c = colors.xyY_clamp_to_srgb_gamut(c);
    c = colors.xyY_to_XYZ(c);
    c = colors.XYZ_to_srgb_linear(c);
    for (j = 0; j < 3; j++) {
      if (c[j] > hi) { hi = c[j]; }
      if (c[j] < lo) { lo = c[j]; }
    }
    color.push(c);
  }
  for (i = 0; i <= steps; i++) {
    for (j = 0; j < 3; j++) {
      color[i][j] = (color[i][j] - lo) / (hi - lo);
    }
    var wl = start + (end - start) * i / steps;
    var y = color[i][0] * 0.2126 + color[i][1] * 0.7152 + color[i][2] * 0.0722;
    data.push([wl].concat(color[i]).concat([y]));
  }
  return data;
}

var paintVisibleSpectrum = function(canvasId, start, end) {
  var canv = document.getElementById(canvasId);
  var ctx = canv.getContext("2d");
  ctx.rect(0, 0, canv.width, canv.height);
  var data = getVisibleSpectrum(start, end, canv.width - 1);
  for (i = 0; i < canv.width; i++) {
    var c = data[i].slice(1, 4);
    c = colors.srgb_linear_to_srgb(c);
    c = colors.hexify(c);
    ctx.fillStyle = c;
    ctx.fillRect(i, 0, 1, canv.height);
  }
}

